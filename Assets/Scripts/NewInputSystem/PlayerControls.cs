//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/NewInputSystem/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""ComputerInputMap"",
            ""id"": ""8bafa859-4eae-4209-9267-5f345494b808"",
            ""actions"": [
                {
                    ""name"": ""LeftArrow"",
                    ""type"": ""Value"",
                    ""id"": ""e6e1487e-0a86-42b1-8ab5-8b7417f1655f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightArrow"",
                    ""type"": ""Value"",
                    ""id"": ""b7cf912e-5f7d-43c3-a7e7-73abbf0eac06"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseTapPosition"",
                    ""type"": ""Value"",
                    ""id"": ""2b9c2650-f178-46a7-9d11-57352880d699"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseTap"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c7f3f239-fbd3-4ad6-804c-311d476edb12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseHoldPosition"",
                    ""type"": ""Value"",
                    ""id"": ""cea3c81a-9983-425f-a38d-7a4bccaa3175"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseHoldButton"",
                    ""type"": ""Button"",
                    ""id"": ""9fc682c4-86bf-4c79-af5c-48a932ae192c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eac9f88d-8f73-4889-a4ab-9c4d40e5425b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84f23bec-02c1-4036-a6f8-1014f557063d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81393496-bb83-4395-abec-9af91c533774"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseHoldPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52dda217-4b39-492c-90bf-9e68243d0cc1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseTap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a1b6061-4946-47b8-850d-bde49233052f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseHoldButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""431dc5bf-5a33-4adc-9e15-b5241f2cef30"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseTapPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ComputerInputMap
        m_ComputerInputMap = asset.FindActionMap("ComputerInputMap", throwIfNotFound: true);
        m_ComputerInputMap_LeftArrow = m_ComputerInputMap.FindAction("LeftArrow", throwIfNotFound: true);
        m_ComputerInputMap_RightArrow = m_ComputerInputMap.FindAction("RightArrow", throwIfNotFound: true);
        m_ComputerInputMap_MouseTapPosition = m_ComputerInputMap.FindAction("MouseTapPosition", throwIfNotFound: true);
        m_ComputerInputMap_MouseTap = m_ComputerInputMap.FindAction("MouseTap", throwIfNotFound: true);
        m_ComputerInputMap_MouseHoldPosition = m_ComputerInputMap.FindAction("MouseHoldPosition", throwIfNotFound: true);
        m_ComputerInputMap_MouseHoldButton = m_ComputerInputMap.FindAction("MouseHoldButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ComputerInputMap
    private readonly InputActionMap m_ComputerInputMap;
    private IComputerInputMapActions m_ComputerInputMapActionsCallbackInterface;
    private readonly InputAction m_ComputerInputMap_LeftArrow;
    private readonly InputAction m_ComputerInputMap_RightArrow;
    private readonly InputAction m_ComputerInputMap_MouseTapPosition;
    private readonly InputAction m_ComputerInputMap_MouseTap;
    private readonly InputAction m_ComputerInputMap_MouseHoldPosition;
    private readonly InputAction m_ComputerInputMap_MouseHoldButton;
    public struct ComputerInputMapActions
    {
        private @PlayerControls m_Wrapper;
        public ComputerInputMapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftArrow => m_Wrapper.m_ComputerInputMap_LeftArrow;
        public InputAction @RightArrow => m_Wrapper.m_ComputerInputMap_RightArrow;
        public InputAction @MouseTapPosition => m_Wrapper.m_ComputerInputMap_MouseTapPosition;
        public InputAction @MouseTap => m_Wrapper.m_ComputerInputMap_MouseTap;
        public InputAction @MouseHoldPosition => m_Wrapper.m_ComputerInputMap_MouseHoldPosition;
        public InputAction @MouseHoldButton => m_Wrapper.m_ComputerInputMap_MouseHoldButton;
        public InputActionMap Get() { return m_Wrapper.m_ComputerInputMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ComputerInputMapActions set) { return set.Get(); }
        public void SetCallbacks(IComputerInputMapActions instance)
        {
            if (m_Wrapper.m_ComputerInputMapActionsCallbackInterface != null)
            {
                @LeftArrow.started -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.performed -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.canceled -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnLeftArrow;
                @RightArrow.started -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnRightArrow;
                @RightArrow.performed -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnRightArrow;
                @RightArrow.canceled -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnRightArrow;
                @MouseTapPosition.started -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseTapPosition;
                @MouseTapPosition.performed -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseTapPosition;
                @MouseTapPosition.canceled -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseTapPosition;
                @MouseTap.started -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseTap;
                @MouseTap.performed -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseTap;
                @MouseTap.canceled -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseTap;
                @MouseHoldPosition.started -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseHoldPosition;
                @MouseHoldPosition.performed -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseHoldPosition;
                @MouseHoldPosition.canceled -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseHoldPosition;
                @MouseHoldButton.started -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseHoldButton;
                @MouseHoldButton.performed -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseHoldButton;
                @MouseHoldButton.canceled -= m_Wrapper.m_ComputerInputMapActionsCallbackInterface.OnMouseHoldButton;
            }
            m_Wrapper.m_ComputerInputMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftArrow.started += instance.OnLeftArrow;
                @LeftArrow.performed += instance.OnLeftArrow;
                @LeftArrow.canceled += instance.OnLeftArrow;
                @RightArrow.started += instance.OnRightArrow;
                @RightArrow.performed += instance.OnRightArrow;
                @RightArrow.canceled += instance.OnRightArrow;
                @MouseTapPosition.started += instance.OnMouseTapPosition;
                @MouseTapPosition.performed += instance.OnMouseTapPosition;
                @MouseTapPosition.canceled += instance.OnMouseTapPosition;
                @MouseTap.started += instance.OnMouseTap;
                @MouseTap.performed += instance.OnMouseTap;
                @MouseTap.canceled += instance.OnMouseTap;
                @MouseHoldPosition.started += instance.OnMouseHoldPosition;
                @MouseHoldPosition.performed += instance.OnMouseHoldPosition;
                @MouseHoldPosition.canceled += instance.OnMouseHoldPosition;
                @MouseHoldButton.started += instance.OnMouseHoldButton;
                @MouseHoldButton.performed += instance.OnMouseHoldButton;
                @MouseHoldButton.canceled += instance.OnMouseHoldButton;
            }
        }
    }
    public ComputerInputMapActions @ComputerInputMap => new ComputerInputMapActions(this);
    public interface IComputerInputMapActions
    {
        void OnLeftArrow(InputAction.CallbackContext context);
        void OnRightArrow(InputAction.CallbackContext context);
        void OnMouseTapPosition(InputAction.CallbackContext context);
        void OnMouseTap(InputAction.CallbackContext context);
        void OnMouseHoldPosition(InputAction.CallbackContext context);
        void OnMouseHoldButton(InputAction.CallbackContext context);
    }
}
